{"version":3,"sources":["components/signupForm.js","containers/signUp.js"],"names":["SignupForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","notify1","toast","error","position","POSITION","TOP_LEFT","notify2","notify3","notify4","notify5","handleInputChange","event","preventDefault","setState","defineProperty","target","name","value","console","log","handleChange","password","handleChange2","password_confirmation","handleFormSubmit","user","email","state","repassword","phone","isOk","test","emailok","yahooOk","phonelength","length","signup","then","response","status","history","push","submitted","react_default","a","createElement","className","htmlFor","type","placeholder","onChange","onClick","Component","connect","dispatch","AuthAction","Signup","NavLink","activeStyle","margin","color","textDecoration","borderBottom","exact","to","signupForm","lib"],"mappings":"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","file":"static/js/3.1ab4081c.chunk.js","sourcesContent":["import React,{Component} from \"react\";\nimport {  toast } from 'react-toastify';\nimport * as AuthAction from '../actions/authaction';\nimport \"../App.css\";\nimport {connect } from \"react-redux\";\n\nimport 'react-toastify/dist/ReactToastify.css';\nclass SignupForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // value: '',\n            // value2: '',\n            // value3: '',\n            email: '',\n            phone: '',\n            password: '',\n            password_confirmation: '',\n      \n          };\n      \n          this.submitted = false;\n    }\n    notify1 = () => toast.error(\"Email should be Valid !\", {\n        position: toast.POSITION.TOP_LEFT\n      });\n      notify2 = () => toast.error(\"Email must ends with Yahoo.com !\", {\n        position: toast.POSITION.TOP_LEFT\n      });\n      notify3 = () => toast.error(\"Password must contain atleast 8 characters,special character,one uppercase & lowercase letter and one number\", {\n        position: toast.POSITION.TOP_LEFT\n      });\n      notify4 = () => toast.error(\"phonelength must be of 10 digits\", {\n        position: toast.POSITION.TOP_LEFT\n      });\n      notify5 = () => toast.error(\"password and confirm password must be same\", {\n        position: toast.POSITION.TOP_LEFT\n      });\n    \n    \n    \n    \n      handleInputChange = event => {\n        event.preventDefault();\n    \n        this.setState({\n          [event.target.name]: event.target.value,\n        });\n        console.log(event.target.name, \"event_target_name\", event.target.value);\n    \n      }\n    \n      handleChange = (event) => {\n        event.preventDefault();\n        this.setState({ password: event.target.value });\n      }\n    \n    \n      handleChange2 = (event) => {\n        event.preventDefault();\n        this.setState({ password_confirmation: event.target.value });\n      }\n    \n      handleFormSubmit = event => {\n        event.preventDefault();\n        const user = {\n          email: this.state.email,\n          password: this.state.password,\n          repassword: this.state.password_confirmation,\n          phone: this.state.phone,\n    \n        };\n        const { email } = this.state;\n        const { password } = this.state;\n        const { phone } = this.state;\n        const { password_confirmation } = this.state;\n    \n    \n    \n    \n        const regexpassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n        const isOk = regexpassword.test(password);\n        const emailreg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        const emailok = emailreg.test(email);\n        const yahoo = /@yahoo.com\\s*$/;\n        const yahooOk = yahoo.test(email);\n        const phonelength = phone.length\n    \n        if (!emailok) {\n          return (this.notify1());\n        }\n        else if (!yahooOk) {\n          return (this.notify2())\n        }\n        else if (phonelength !== 10) {\n          return (this.notify4())\n        }\n        else if (!isOk) {\n          return (this.notify3())\n        }\n        else if (password !== password_confirmation) {\n          return (this.notify5())\n    \n        }\n    \n    \n        else (this.props.signup(user).then(response => {\n          if (response && response.status) {\n            this.props.history.push(\"./\")\n          }\n    \n        }));\n    \n    \n    \n      }\n    render() {\n        return (\n            <form className=\"demoForm\">\n                <h2>Sign up</h2>\n\n                <div>\n                    <label htmlFor=\"email\">Email address</label>\n                    <input type=\"email\" className=\"form-control\"\n                        name=\"email\"\n                        placeholder=\"abc@gmail.com\"\n                        onChange={this.handleInputChange}\n                    />\n                    {/* <span className=\"help-block\">{validation.email.message}</span> */}\n                </div>\n\n                <div>\n                    <label htmlFor=\"phone\">Phone</label>\n                    <input type=\"number\" className=\"form-control\"\n                        name=\"phone\"\n                        placeholder=\"9876543210\"\n                        onChange={this.handleInputChange}\n                    />\n                    {/* <span className=\"help-block\">{validation.phone.message}</span> */}\n                </div>\n\n                <div >\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" className=\"form-control\"\n                        name=\"password\"\n                        onChange={this.handleChange}\n                        placeholder=\"***********\"\n                    />\n                    {/* <span className=\"help-block\">{validation.password.message}</span> */}\n                </div>\n\n                <div >\n                    <label htmlFor=\"password_confirmation\">Confirm Password</label>\n                    <input type=\"password\" className=\"form-control\"\n                        name=\"password_confirmation\"\n                        onChange={this.handleChange2}\n                        placeholder=\"***********\"\n\n\n                    />\n                    {/* <span className=\"help-block\">{validation.password_confirmation.message}</span> */}\n                </div>\n\n                <button onClick={this.handleFormSubmit} className=\"btn btn-primary\">\n                    Sign up\n    </button>\n            </form>\n        )\n    }\n}\nconst mapToDispatchProps = (dispatch) => {\n    return {\n      signup: (user) => dispatch(AuthAction.signup(user)),\n    }\n  }\n  \n  export default connect(null, mapToDispatchProps)(SignupForm);\n  \n","import React, { Component } from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport \"../App.css\";\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css';\nimport {  NavLink } from \"react-router-dom\";\nimport SignupForm from \"../components/signupForm\";\n\nimport 'react-toastify/dist/ReactToastify.css';\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // value: '',\n      // value2: '',\n      // value3: '',\n      email: '',\n      phone: '',\n      password: '',\n      password_confirmation: '',\n\n    };\n\n    this.submitted = false;\n\n\n  }\n  \n  render() {\n    return (\n      <div className =\"background\">\n      <div className=\"container-fluid\">\n        <div className=\"loginform\" >\n          <div className=\"insideform\">\n            <div className=\"links\">\n              <NavLink activeStyle={{ margin: \"5%\", color: \"white\", textDecoration: 'none', borderBottom: 'solid 1px #fff' }} exact to=\"/\">Login</NavLink>\n              <NavLink activeStyle={{ margin: \"5%\", color: \"white\", textDecoration: 'none', borderBottom: 'solid 1px #fff' }} exact to=\"/signup\">Register</NavLink>\n            </div>\n            <br />\n            <div>\n             <SignupForm history={this.props.history} />\n              <ToastContainer />\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\n\n// const mapStateToProps = (state) => {\n//   return {\n//        user:state.user.data\n//   };\n// };\n// const mapToDispatchProps = (dispatch) => {\n//   return {\n//     signup: (user) => dispatch(AuthAction.signup(user)),\n//   }\n// }\n\n// export default connect(null, mapToDispatchProps)(Signup);\nexport default Signup"],"sourceRoot":""}